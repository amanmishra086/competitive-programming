package recusionANDbacktracking;

import java.util.Arrays;

public class AcodeRecursion {

	public static void main(String[] args) {
		
		char ch[]= {'\0','a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z'};
		
		int arr[]= {1,2,3,4};
		
		char out[]=new char[4];
		
	   genearte(arr,ch,out,0,0);
		
		
	}

	private static void genearte(int[] arr, char[] ch, char[] out, int i,int j) {
		
		if(i>=arr.length || j>=arr.length) {
			System.out.println(Arrays.toString(out));
			return;
		}
	
	
//		  out[i]=ch[arr[i]];
//		  genearte(arr,ch,out,i+1,j);
	
		  if((arr[i]*10)+arr[i+1]<26) {
			  out[j]=ch[(arr[i]*10)+arr[i+1]];
			  genearte(arr,ch,out,i+2,j+1);
		  }
	}

}
